schema_version: 1

context:
  version: 1.4.3

package:
  name: great-expectations
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/g/great-expectations/great_expectations-${{ version }}.tar.gz
  sha256: ef6af5095a829df5384755392a7460a91d1e2ccdb0a19cab9e3a22f13ead9c19

build:
  number: 1
  noarch: python
  script: ${{ PYTHON }} -m pip install . --no-deps -vv
  python:
    entry_points:
      - great_expectations = great_expectations.cli:main

requirements:
  host:
    # Needs a versioneer update, the code should run with 3.12 though
    - python ${{ python_min }}.*
    - pip
    - versioneer
  run:
    - typing_extensions >=4.1.0
    - posthog >3,<4
    - python >=${{ python_min }}
    - altair >=4.2.1,<5.0.0
    - click >=7.1.2
    - colorama >=0.4.3
    - cryptography >=3.2
    - ipython >=7.16.3
    - ipywidgets >=7.5.1
    - jinja2 >=3
    - jsonpatch >=1.22
    - jsonschema >=2.5.1
    - makefun >=1.7.0,<2
    - marshmallow >=3.7.1,<4.0.0
    - mistune >=0.8.4
    - nbformat >=5.0
    - notebook >=6.4.10
    - numpy >=1.20.3,<2
    - packaging
    - pandas >=1.1.0,<2.2
    - pydantic >=1.10.7
    - pyparsing >=2.4
    - python-dateutil >=2.8.1
    - pytz >=2021.3
    - requests >=2.20
    - ruamel.yaml >=0.16
    - scipy >=1.6.0
    - tqdm >=4.59.0
    - typing-extensions >=4.1.0
    - tzlocal >=1.2
    - urllib3 >=1.26
  run_constraints:
    - sqlalchemy >=1.3.16
    - pyspark >=2.3.2

tests:
  - python:
      imports:
        - great_expectations
      python_version: ${{ python_min }}.*
  - requirements:
      run:
        - pip
        - python ${{ python_min }}.*
    script:
      - pip check

about:
  license: Apache-2.0
  license_file: LICENSE
  summary: Always know what to expect from your data.
  description: |
    Great Expectations helps teams save time and promote analytic integrity
    by offering a unique approach to automated testing: pipeline tests.
    Pipeline tests are applied to data (instead of code) and at batch time
    (instead of compile or deploy time). Pipeline tests are like unit tests
    for datasets: they help you guard against upstream data changes and monitor
    data quality.

    Software developers have long known that automated testing is
    essential for managing complex codebases. Great Expectations brings
    the same discipline, confidence, and acceleration to data science
    and engineering teams.
  homepage: https://github.com/great-expectations/great_expectations
  repository: https://github.com/great-expectations/great_expectations
  documentation: https://docs.greatexpectations.io

extra:
  recipe-maintainers:
    - sodre
    - jcampbell
    - xhochy
    - alexsherstinsky
    - anthonyburdi
    - talagluck
    - Shinnnyshinshin
    - janjagusch
    - cdkini
